// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.WebAPI.Data;

namespace SmartSchool.WebAPI.Migrations
{
    [DbContext(typeof(SmartDbContext))]
    [Migration("20210225014112_intial")]
    partial class intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Aluno", b =>
                {
                    b.Property<int>("alunoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeAluno")
                        .HasColumnType("TEXT");

                    b.Property<string>("SobreNomeAluno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .HasColumnType("TEXT");

                    b.HasKey("alunoId");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            alunoId = 1,
                            NomeAluno = "Marta",
                            SobreNomeAluno = "Kent",
                            Telefone = "33225555"
                        },
                        new
                        {
                            alunoId = 2,
                            NomeAluno = "Paula",
                            SobreNomeAluno = "Isabela",
                            Telefone = "3354288"
                        },
                        new
                        {
                            alunoId = 3,
                            NomeAluno = "Laura",
                            SobreNomeAluno = "Antonia",
                            Telefone = "55668899"
                        },
                        new
                        {
                            alunoId = 4,
                            NomeAluno = "Luiza",
                            SobreNomeAluno = "Maria",
                            Telefone = "6565659"
                        },
                        new
                        {
                            alunoId = 5,
                            NomeAluno = "Lucas",
                            SobreNomeAluno = "Machado",
                            Telefone = "565685415"
                        },
                        new
                        {
                            alunoId = 6,
                            NomeAluno = "Pedro",
                            SobreNomeAluno = "Alvares",
                            Telefone = "456454545"
                        },
                        new
                        {
                            alunoId = 7,
                            NomeAluno = "Paulo",
                            SobreNomeAluno = "José",
                            Telefone = "9874512"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.AlunoDisciplina", b =>
                {
                    b.Property<int>("alunoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("disciplinaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("alunoId", "disciplinaId");

                    b.HasIndex("disciplinaId");

                    b.ToTable("AlunoDisciplinas");

                    b.HasData(
                        new
                        {
                            alunoId = 1,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 1,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 1,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 2,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 2,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 2,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 3,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 3,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 3,
                            disciplinaId = 3
                        },
                        new
                        {
                            alunoId = 4,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 4,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 4,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 5,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 5,
                            disciplinaId = 5
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 3
                        },
                        new
                        {
                            alunoId = 6,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 1
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 2
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 3
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 4
                        },
                        new
                        {
                            alunoId = 7,
                            disciplinaId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Disciplina", b =>
                {
                    b.Property<int>("disciplinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("discricaoDisciplina")
                        .HasColumnType("TEXT");

                    b.Property<int>("professorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("disciplinaId");

                    b.HasIndex("professorId");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            disciplinaId = 1,
                            discricaoDisciplina = "Matemática",
                            professorId = 1
                        },
                        new
                        {
                            disciplinaId = 2,
                            discricaoDisciplina = "Física",
                            professorId = 2
                        },
                        new
                        {
                            disciplinaId = 3,
                            discricaoDisciplina = "Português",
                            professorId = 3
                        },
                        new
                        {
                            disciplinaId = 4,
                            discricaoDisciplina = "Inglês",
                            professorId = 4
                        },
                        new
                        {
                            disciplinaId = 5,
                            discricaoDisciplina = "Programação",
                            professorId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Professor", b =>
                {
                    b.Property<int>("professorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nomeProfessor")
                        .HasColumnType("TEXT");

                    b.HasKey("professorID");

                    b.ToTable("Professores");

                    b.HasData(
                        new
                        {
                            professorID = 1,
                            nomeProfessor = "Lauro"
                        },
                        new
                        {
                            professorID = 2,
                            nomeProfessor = "Roberto"
                        },
                        new
                        {
                            professorID = 3,
                            nomeProfessor = "Ronaldo"
                        },
                        new
                        {
                            professorID = 4,
                            nomeProfessor = "Rodrigo"
                        },
                        new
                        {
                            professorID = 5,
                            nomeProfessor = "Alexandre"
                        });
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Aluno", "Aluno")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("alunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.WebAPI.Models.Disciplina", "Disciplina")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("disciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Disciplina", b =>
                {
                    b.HasOne("SmartSchool.WebAPI.Models.Professor", "Professor")
                        .WithMany("Disciplina")
                        .HasForeignKey("professorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Aluno", b =>
                {
                    b.Navigation("AlunoDisciplinas");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Disciplina", b =>
                {
                    b.Navigation("AlunoDisciplinas");
                });

            modelBuilder.Entity("SmartSchool.WebAPI.Models.Professor", b =>
                {
                    b.Navigation("Disciplina");
                });
#pragma warning restore 612, 618
        }
    }
}
